package ${serviceImplUrl};

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import ${url};
import ${exampleurl};
import ${serviceUrl}.${name}Service;
import ${mapperUrl}.${name}Mapper;

@Service
public class ${name}ServiceImpl implements ${name}Service{

    private static final Logger logger = LoggerFactory.getLogger(${name}ServiceImpl.class);

    @Autowired
    private ${name}Mapper mapper;

    @Override
    public ${name} get${name}(${primaryType} ${primaryKey}) {

        ${name} model = mapper.selectByPrimaryKey(${primaryKey});
        if (model == null) {
            logger.error("[get${name}]delete ${name} ${primaryKey}={} fail", ${primaryKey});
            throw new RuntimeException("GET data fail");
        }
        return model;

    }

    @Override
    public void save(${name} model) {
    
        int success = mapper.insertSelective(model);
        if (success <= 0) {
            logger.error("[add${name}]add ${name}={} fail",  model.toString());
            throw new RuntimeException("Add data fail");
        }
        return;

    }

    @Override
    public void update(${name} model) {
    
        int success = mapper.updateByPrimaryKeySelective(model);
        if (success <= 0) {
            logger.error("[update${name}]update ${name}={} fail",  model.toString());
            throw new RuntimeException("Modify data fail");
        }
        return;

    }

    @Override
    public void deleteByPrimaryKey(${primaryType} ${primaryKey}) {

        int success = mapper.deleteByPrimaryKey(${primaryKey});
        if (success <= 0) {
            logger.error("[delete${name}]delete ${name} ${primaryKey}={} fail", ${primaryKey});
            throw new RuntimeException("Del data fail");
        }
        return;

    }
    
    @Override
    public void deleteByExample(${name}Example example) {
    
        int success = mapper.deleteByExample(example);
        if (success <= 0) {
            logger.error("[delete${name}]deleteByExample ${name} example={} fail", example);
            throw new RuntimeException("DeleteByExample data fail");
        }
        return;
    }
    
    @Override
    public long countByExample(${name}Example example) {
    
        return mapper.countByExample(example);
        
    }

    @Override
    public PageInfo<${name}> getListByPage(int currentPage, int itemsPerPage, ${name}Example example) {
       
        List<${name}> list = null;
        PageInfo<${name}> page = null;
		try {
			PageHelper.startPage(currentPage,itemsPerPage); 
			logger.info("设置第"+currentPage+"页"+itemsPerPage+"条数据!");
			list = mapper.selectByExample(example);
			page = new PageInfo<${name}>(list);
			logger.info("总共有:"+page.getTotal()+"条数据,实际返回:"+list.size()+"条数据!");
		} catch (Exception e) {
			logger.error("查询失败!原因是:",e);
		}
		return page;
		
    }

    @Override
    public List<${name}> getList(${name}Example example) {
    
        return mapper.selectByExample(example);
        
    }
}