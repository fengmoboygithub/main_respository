banner.charset=UTF-8
server.tomcat.uri-encoding=UTF-8
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
spring.messages.encoding=UTF-8

######################################mybatis设置开始######################################
mybatis.config-locations=classpath:mybatis-config.xml
mybatis.type-aliases-package=com.interapi.app.**.model
#在classpath后面的*必不可少 缺少*字符 只会查找本项目下的包 不会查找引入的子项目的包
mybatis.mapper-locations=classpath*\:com/interapi/app/**/mapper/*.xml
######################################mybatis设置结束######################################

######################################redis设置开始######################################
# 指定连接工厂使用的Database index
spring.redis.database=0
# 指定Redis server host，默认为: localhost
spring.redis.host=localhost
# 指定redis服务端端口，默认: 6379
spring.redis.port=6379
# 连接超时时间 单位 ms（毫秒）
spring.redis.timeout=3000
# 连接池中的最大空闲连接，默认值也是8。
spring.redis.pool.max-idle=8
# 连接池中的最小空闲连接，默认值也是0。
spring.redis.pool.min-idle=0
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.pool.max-active=8
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.pool.max-wait=6000
spring.redis.password=
######################################redis哨兵设置######################################
# Redis服务器master的名字
#spring.redis.sentinel.master=master8026
# redis-sentinel的配置地址和端口
#spring.redis.sentinel.nodes=10.189.80.25:26379,10.189.80.26:26379,10.189.80.27:26378
######################################redis设置结束######################################


#######################################数据库设置开始######################################
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/bmp?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull
#ENC(nye8baJ9veWmhYovWKgzjQ==)
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.initialSize=5  
spring.datasource.minIdle=5  
spring.datasource.maxActive=20  
spring.datasource.maxWait=60000  
spring.datasource.timeBetweenEvictionRunsMillis=60000  
spring.datasource.minEvictableIdleTimeMillis=300000  
spring.datasource.validationQuery=SELECT 1 FROM DUAL  
spring.datasource.testWhileIdle=true  
spring.datasource.testOnBorrow=false  
spring.datasource.testOnReturn=false  
spring.datasource.poolPreparedStatements=true  
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20  
spring.datasource.filters=stat,wall,log4j  
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#######################################数据库设置结束######################################
#logback日志
logging.config=classpath\:logback.xml
#服务名称
server.servlet.context-path=/usermanage
#服务端口
server.port=8091
#session.cookie名称
session.cookie.name=USERMANAGESESSIONID
# sso-server地址
auth-server=http://localhost:9999/auth-server 
#客户端配置  client ENC(S14uBmYhnqZ0sqxaOoFUUg==)
security.oauth2.client.client-id=client
#密码 secret ENC(uoX6URqx5uy9XGC/dnbuPA==)
security.oauth2.client.client-secret=secret
#请求认证的地址
security.oauth2.client.user-authorization-uri=${auth-server}/oauth/authorize
#授权方式
security.oauth2.client.grant-type=password
#申请的权限范围
security.oauth2.client.scope=all
#请求令牌的地址
security.oauth2.client.access-token-uri=${auth-server}/oauth/token
#解析jwt令牌所需要密钥的地址
security.oauth2.resource.jwt.key-uri=${auth-server}/oauth/token_key
security.basic.enabled=false
logging.level.org.springframework.security=info
#请求头最大值
server.max-http-header-size=10000000
jwt.header:Authorization
jwt.tokenHead:Bearer