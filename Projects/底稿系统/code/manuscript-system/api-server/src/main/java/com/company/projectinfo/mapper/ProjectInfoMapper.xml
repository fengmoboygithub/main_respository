<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.projectinfo.dao.ProjectInfoMapper">
  <resultMap id="BaseResultMap" type="com.company.projectinfo.model.ProjectInfo">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="PROJECTNAME" jdbcType="VARCHAR" property="projectname" />
    <result column="PROJECTNO" jdbcType="VARCHAR" property="projectno" />
    <result column="STAGE" jdbcType="VARCHAR" property="stage" />
    <result column="STAGENAME" jdbcType="VARCHAR" property="stagename" />
    <result column="PROJECTTYPE" jdbcType="VARCHAR" property="projecttype" />
    <result column="BEGINDATE" jdbcType="DATE" property="begindate" />
    <result column="ENDDATE" jdbcType="DATE" property="enddate" />
    <result column="PROJECTMANAGER" jdbcType="VARCHAR" property="projectmanager" />
    <result column="PERSONNEL" jdbcType="VARCHAR" property="personnel" />
    <result column="STATUS" jdbcType="CHAR" property="status" />
  </resultMap>
  <resultMap id="ViewResultMap" type="com.company.projectinfo.view.DealtInfo">
    <id column="PROJECTID" jdbcType="VARCHAR" property="projectid" />
    <result column="STAGE" jdbcType="VARCHAR" property="stage" />
    <result column="PROJECTNAME" jdbcType="VARCHAR" property="projectname" />
    <result column="SNAME" jdbcType="VARCHAR" property="sname" />
    <result column="PROCESSNODE" jdbcType="VARCHAR" property="processnode" />
    <result column="PROCESSNODENAME" jdbcType="VARCHAR" property="processnodename" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, PROJECTNAME, PROJECTNO, STAGE, STAGENAME, PROJECTTYPE, PROJECTTYPENAME, BEGINDATE, ENDDATE, PROJECTMANAGER,
    PERSONNEL, STATUS, PROCESSINSTANCEID
  </sql>
  <select id="selectByExample" parameterType="com.company.projectinfo.model.ProjectInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from (select p.ID, p.PROJECTNAME, p.PROJECTNO, p.STAGE, s.STAGENAME, p.PROJECTTYPE, pt.TYPENAME as PROJECTTYPENAME, p.BEGINDATE, p.ENDDATE, p.PROJECTMANAGER, p.PERSONNEL, p.STATUS, p.PROCESSINSTANCEID, p.IS_DELETE, p.CREATE_TIME, p.CREATE_USER, p.UPDATE_TIME, p.UPDATE_USER  from projectinfo p join stageinfo s on p.PROJECTTYPE=s.PROJECTTYPE and p.STAGE=s.PROJECTSTAGE join projecttypeinfo pt on pt.ID=p.PROJECTTYPE) a
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from (select p.ID, p.PROJECTNAME, p.PROJECTNO, p.STAGE, s.STAGENAME, p.PROJECTTYPE, pt.TYPENAME as PROJECTTYPENAME, p.BEGINDATE, p.ENDDATE, p.PROJECTMANAGER, p.PERSONNEL, p.STATUS, p.PROCESSINSTANCEID from projectinfo p join stageinfo s on p.PROJECTTYPE=s.PROJECTTYPE and p.STAGE=s.PROJECTSTAGE join projecttypeinfo pt on pt.ID=p.PROJECTTYPE) a
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from projectinfo
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.company.projectinfo.model.ProjectInfoExample">
    delete from projectinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.company.projectinfo.model.ProjectInfo">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') as uuid
    </selectKey>
    insert into projectinfo (ID, PROJECTNAME, PROJECTNO, 
      STAGE, PROJECTTYPE, BEGINDATE, 
      ENDDATE, PROJECTMANAGER, PERSONNEL,
      STATUS)
    values (#{id,jdbcType=VARCHAR}, #{projectname,jdbcType=VARCHAR}, #{projectno,jdbcType=VARCHAR}, 
      #{stage,jdbcType=VARCHAR}, #{projecttype,jdbcType=VARCHAR}, #{begindate,jdbcType=DATE},
      #{enddate,jdbcType=DATE}, #{projectmanager,jdbcType=VARCHAR}, #{personnel,jdbcType=VARCHAR},
      #{status,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.company.projectinfo.model.ProjectInfo">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') as uuid
    </selectKey>
    insert into projectinfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="projectname != null">
        PROJECTNAME,
      </if>
      <if test="projectno != null">
        PROJECTNO,
      </if>
      <if test="stage != null">
        STAGE,
      </if>
      <if test="projecttype != null">
        PROJECTTYPE,
      </if>
      <if test="begindate != null">
        BEGINDATE,
      </if>
      <if test="enddate != null">
        ENDDATE,
      </if>
      <if test="projectmanager != null">
        PROJECTMANAGER,
      </if>
      <if test="personnel != null">
        PERSONNEL,
      </if>
      <if test="status != null">
        STATUS,
      </if>
      <if test="isDelete != null">
        IS_DELETE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="createUser != null">
        CREATE_USER,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="updateUser != null">
        UPDATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="projectname != null">
        #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="projectno != null">
        #{projectno,jdbcType=VARCHAR},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=VARCHAR},
      </if>
      <if test="projecttype != null">
        #{projecttype,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=DATE},
      </if>
      <if test="projectmanager != null">
        #{projectmanager,jdbcType=VARCHAR},
      </if>
      <if test="personnel != null">
        #{personnel,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.company.projectinfo.model.ProjectInfoExample" resultType="java.lang.Long">
    select count(*) from projectinfo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update projectinfo
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.projectname != null">
        PROJECTNAME = #{record.projectname,jdbcType=VARCHAR},
      </if>
      <if test="record.projectno != null">
        PROJECTNO = #{record.projectno,jdbcType=VARCHAR},
      </if>
      <if test="record.stage != null">
        STAGE = #{record.stage,jdbcType=VARCHAR},
      </if>
      <if test="record.projecttype != null">
        PROJECTTYPE = #{record.projecttype,jdbcType=VARCHAR},
      </if>
      <if test="record.begindate != null">
        BEGINDATE = #{record.begindate,jdbcType=DATE},
      </if>
      <if test="record.enddate != null">
        ENDDATE = #{record.enddate,jdbcType=DATE},
      </if>
      <if test="record.projectmanager != null">
        PROJECTMANAGER = #{record.projectmanager,jdbcType=VARCHAR},
      </if>
      <if test="record.personnel != null">
        PERSONNEL = #{record.personnel,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        STATUS = #{record.status,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update projectinfo
    set ID = #{record.id,jdbcType=VARCHAR},
      PROJECTNAME = #{record.projectname,jdbcType=VARCHAR},
      PROJECTNO = #{record.projectno,jdbcType=VARCHAR},
      STAGE = #{record.stage,jdbcType=VARCHAR},
      PROJECTTYPE = #{record.projecttype,jdbcType=VARCHAR},
      BEGINDATE = #{record.begindate,jdbcType=DATE},
      ENDDATE = #{record.enddate,jdbcType=DATE},
      PROJECTMANAGER = #{record.projectmanager,jdbcType=VARCHAR},
      PERSONNEL = #{record.personnel,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.projectinfo.model.ProjectInfo">
    update projectinfo
    <set>
      <if test="projectname != null">
        PROJECTNAME = #{projectname,jdbcType=VARCHAR},
      </if>
      <if test="projectno != null">
        PROJECTNO = #{projectno,jdbcType=VARCHAR},
      </if>
      <if test="stage != null">
        STAGE = #{stage,jdbcType=VARCHAR},
      </if>
      <if test="projecttype != null">
        PROJECTTYPE = #{projecttype,jdbcType=VARCHAR},
      </if>
      <if test="begindate != null">
        BEGINDATE = #{begindate,jdbcType=DATE},
      </if>
      <if test="enddate != null">
        ENDDATE = #{enddate,jdbcType=DATE},
      </if>
      <if test="projectmanager != null">
        PROJECTMANAGER = #{projectmanager,jdbcType=VARCHAR},
      </if>
      <if test="personnel != null">
        PERSONNEL = #{personnel,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        STATUS = #{status,jdbcType=CHAR},
      </if>
      <if test="processInstanceId != null">
        PROCESSINSTANCEID = #{processInstanceId,jdbcType=CHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.projectinfo.model.ProjectInfo">
    update projectinfo
    set PROJECTNAME = #{projectname,jdbcType=VARCHAR},
      PROJECTNO = #{projectno,jdbcType=VARCHAR},
      STAGE = #{stage,jdbcType=VARCHAR},
      PROJECTTYPE = #{projecttype,jdbcType=VARCHAR},
      BEGINDATE = #{begindate,jdbcType=DATE},
      ENDDATE = #{enddate,jdbcType=DATE},
      PROJECTMANAGER = #{projectmanager,jdbcType=VARCHAR},
      PERSONNEL = #{personnel,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <!-- 新增项目项目操作-对最小“项目阶段”的项目，按“基础目录表”的“是否适用”填写 -->
  <insert id="insertProjectDirectoryMin" parameterType="com.company.projectinfo.model.ProjectInfo">
    insert into projectdirectory(ID, PROJECTID, DIRECTORYID, STAGE, FULLNAME, SNAME, PARENTID, ISAPP, PROCESSNODE, DIRECTORYNO, LEVEL)
    select ID, #{id,jdbcType=VARCHAR} as PROJECTID, ID as DIRECTORYID, PROJECTSTAGE as STAGE,
     FULLNAME, SNAME, PARENTID, ISAPP, '11' as PROCESSNODE, DIRENTORYNO, LEVEL from basedirectory
    where PROJECTTYPE=#{projecttype,jdbcType=VARCHAR} and PROJECTSTAGE=#{stage,jdbcType=VARCHAR}
  </insert>
  <!-- 新增项目项目操作-对其他“项目阶段”项目，“是否适用”写为不适用 -->
  <insert id="insertProjectDirectoryOther" parameterType="com.company.projectinfo.model.ProjectInfo">
    insert into projectdirectory(ID, PROJECTID, DIRECTORYID, STAGE, FULLNAME, SNAME, PARENTID, ISAPP, PROCESSNODE, DIRECTORYNO, LEVEL)
    select ID, #{id,jdbcType=VARCHAR} as PROJECTID, ID as DIRECTORYID, PROJECTSTAGE as STAGE,
     FULLNAME, SNAME, PARENTID, 2, '11' as PROCESSNODE, DIRENTORYNO, LEVEL from basedirectory
    where PROJECTTYPE=#{projecttype,jdbcType=VARCHAR} and PROJECTSTAGE=#{stage,jdbcType=VARCHAR}
  </insert>
  <!-- 项目阶段改变-推进-更新项目信息 -->
  <update id="updateProjectInfoForAdvance" parameterType="com.company.projectinfo.model.ProjectInfo">
    update projectinfo pi set pi.STAGE=(select min(CAST(si.PROJECTSTAGE as SIGNED)) from stageinfo si
        where si.PROJECTTYPE=pi.PROJECTTYPE and CAST(si.PROJECTSTAGE as SIGNED) > pi.STAGE)
    where pi.ID=#{id,jdbcType=VARCHAR}
  </update>
  <!-- 根据项目类型与阶段值获取下个阶段值 -->
  <select id="selectNextStageVal" parameterType="com.company.projectinfo.model.ProjectInfo" resultType="java.lang.Integer">
    select min(CAST(si.PROJECTSTAGE as SIGNED)) from stageinfo si
        where si.PROJECTTYPE=#{projecttype,jdbcType=VARCHAR} and CAST(si.PROJECTSTAGE as SIGNED) > #{stage,jdbcType=VARCHAR}
  </select>
  <!-- 项目阶段改变-推进-更新项目目录信息 -->
  <update id="updateProjectDirectoryForAdvance" parameterType="com.company.projectinfo.model.ProjectInfo">
    UPDATE projectdirectory pi
        INNER JOIN basedirectory bd ON pi.DIRECTORYID = bd.ID and bd.PROJECTSTAGE=#{stage,jdbcType=VARCHAR} and bd.PROJECTTYPE=#{projecttype,jdbcType=VARCHAR}
    SET pi.ISAPP=1
  </update>
  <!-- 项目阶段改变-回退-更新项目信息 -->
  <update id="updateProjectInfoForBack" parameterType="com.company.projectinfo.model.ProjectInfo">
    <![CDATA[
    update projectinfo pi set pi.STAGE=(select max(CAST(si.PROJECTSTAGE as SIGNED)) from stageinfo si
        where si.PROJECTTYPE=pi.PROJECTTYPE and CAST(si.PROJECTSTAGE as SIGNED) < pi.STAGE)
    where pi.ID=#{id,jdbcType=VARCHAR}
    ]]>
  </update>
  <!-- 项目阶段改变-回退-更新项目目录信息 -->
  <update id="updateProjectDirectoryForBack" parameterType="com.company.projectinfo.model.ProjectInfo">
    UPDATE projectdirectory pi
        INNER JOIN basedirectory bd ON pi.DIRECTORYID = bd.ID and bd.PROJECTSTAGE=#{stage,jdbcType=VARCHAR} and bd.PROJECTTYPE=#{projecttype,jdbcType=VARCHAR}
    SET pi.ISAPP=2
  </update>
  <!-- 根据项目id与项目阶段查询正常项目下的最小流程状态且适用的项目目录 -->
  <select id="selectByDealt" parameterType="com.company.projectinfo.model.ProjectInfo" resultMap="ViewResultMap">
    <![CDATA[
        select pdi.PROJECTID as PROJECTID,pi.STAGE as STAGE, pi.PROJECTNAME as PROJECTNAME,pdi.SNAME as SNAME,pdi.PROCESSNODE as PROCESSNODE,pni.PROCESSNODENAME as PROCESSNODENAME
         from projectdirectory pdi
          join projectinfo pi on pi.ID=pdi.PROJECTID and pi.`STATUS`='11'
          join processnodeinfo pni on pni.PROCESSNODE=pdi.PROCESSNODE
          where pdi.PROJECTID=#{id,jdbcType=VARCHAR} and pdi.STAGE<=#{stage,jdbcType=VARCHAR} and pdi.ISAPP='1'
        ORDER BY pdi.PROCESSNODE LIMIT 0,1
    ]]>
  </select>
</mapper>