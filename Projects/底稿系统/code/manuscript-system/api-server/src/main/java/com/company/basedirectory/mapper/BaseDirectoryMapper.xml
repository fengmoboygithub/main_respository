<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.basedirectory.dao.BaseDirectoryMapper">
  <resultMap id="BaseResultMap" type="com.company.basedirectory.model.BaseDirectory">
    <id column="ID" jdbcType="VARCHAR" property="id" />
    <result column="SNAME" jdbcType="VARCHAR" property="sname" />
    <result column="FULLNAME" jdbcType="VARCHAR" property="fullname" />
    <result column="PARENTID" jdbcType="VARCHAR" property="parentid" />
    <result column="PROJECTTYPE" jdbcType="VARCHAR" property="projecttype" />
    <result column="LEVEL" jdbcType="CHAR" property="level" />
    <result column="PROJECTSTAGE" jdbcType="VARCHAR" property="projectstage" />
    <result column="DIRENTORYNO" jdbcType="INTEGER" property="direntoryno" />
    <result column="ISAPP" jdbcType="INTEGER" property="isapp" />
    <result column="CREATEUSER" jdbcType="VARCHAR" property="createuser" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, SNAME, FULLNAME, PARENTID, PROJECTTYPE, LEVEL, PROJECTSTAGE, DIRENTORYNO, ISAPP, 
    CREATEUSER
  </sql>
  <select id="selectByExample" parameterType="com.company.basedirectory.model.BaseDirectoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from basedirectory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from basedirectory
    where ID = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from basedirectory
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.company.basedirectory.model.BaseDirectoryExample">
    delete from basedirectory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.company.basedirectory.model.BaseDirectory">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') as uuid
    </selectKey>
    insert into basedirectory (ID, SNAME, FULLNAME, 
      PARENTID, PROJECTTYPE, LEVEL, 
      PROJECTSTAGE, DIRENTORYNO, ISAPP, 
      CREATEUSER)
    values (#{id,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR}, #{fullname,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=VARCHAR}, #{projecttype,jdbcType=VARCHAR}, #{level,jdbcType=CHAR}, 
      #{projectstage,jdbcType=VARCHAR}, #{direntoryno,jdbcType=INTEGER}, #{isapp,jdbcType=INTEGER},
      #{createuser,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.company.basedirectory.model.BaseDirectory">
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
      select replace(uuid(),'-','') as uuid
    </selectKey>
    insert into basedirectory
    <trim prefix="(" suffix=")" suffixOverrides=",">
      ID,
      <if test="sname != null">
        SNAME,
      </if>
      <if test="fullname != null">
        FULLNAME,
      </if>
      <if test="parentid != null">
        PARENTID,
      </if>
      <if test="projecttype != null">
        PROJECTTYPE,
      </if>
      <if test="level != null">
        LEVEL,
      </if>
      <if test="projectstage != null">
        PROJECTSTAGE,
      </if>
      <if test="direntoryno != null">
        DIRENTORYNO,
      </if>
      <if test="isapp != null">
        ISAPP,
      </if>
      <if test="createuser != null">
        CREATEUSER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      #{id,jdbcType=VARCHAR},
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null">
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="projecttype != null">
        #{projecttype,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        #{level,jdbcType=CHAR},
      </if>
      <if test="projectstage != null">
        #{projectstage,jdbcType=VARCHAR},
      </if>
      <if test="direntoryno != null">
        #{direntoryno,jdbcType=INTEGER},
      </if>
      <if test="isapp != null">
        #{isapp,jdbcType=INTEGER},
      </if>
      <if test="createuser != null">
        #{createuser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.company.basedirectory.model.BaseDirectoryExample" resultType="java.lang.Long">
    select count(*) from basedirectory
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update basedirectory
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.sname != null">
        SNAME = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.fullname != null">
        FULLNAME = #{record.fullname,jdbcType=VARCHAR},
      </if>
      <if test="record.parentid != null">
        PARENTID = #{record.parentid,jdbcType=VARCHAR},
      </if>
      <if test="record.projecttype != null">
        PROJECTTYPE = #{record.projecttype,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null">
        LEVEL = #{record.level,jdbcType=CHAR},
      </if>
      <if test="record.projectstage != null">
        PROJECTSTAGE = #{record.projectstage,jdbcType=VARCHAR},
      </if>
      <if test="record.direntoryno != null">
        DIRENTORYNO = #{record.direntoryno,jdbcType=INTEGER},
      </if>
      <if test="record.isapp != null">
        ISAPP = #{record.isapp,jdbcType=INTEGER},
      </if>
      <if test="record.createuser != null">
        CREATEUSER = #{record.createuser,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update basedirectory
    set ID = #{record.id,jdbcType=VARCHAR},
      SNAME = #{record.sname,jdbcType=VARCHAR},
      FULLNAME = #{record.fullname,jdbcType=VARCHAR},
      PARENTID = #{record.parentid,jdbcType=VARCHAR},
      PROJECTTYPE = #{record.projecttype,jdbcType=VARCHAR},
      LEVEL = #{record.level,jdbcType=CHAR},
      PROJECTSTAGE = #{record.projectstage,jdbcType=VARCHAR},
      DIRENTORYNO = #{record.direntoryno,jdbcType=INTEGER},
      ISAPP = #{record.isapp,jdbcType=INTEGER},
      CREATEUSER = #{record.createuser,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.basedirectory.model.BaseDirectory">
    update basedirectory
    <set>
      <if test="sname != null">
        SNAME = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="fullname != null">
        FULLNAME = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="parentid != null">
        PARENTID = #{parentid,jdbcType=VARCHAR},
      </if>
      <if test="projecttype != null">
        PROJECTTYPE = #{projecttype,jdbcType=VARCHAR},
      </if>
      <if test="level != null">
        LEVEL = #{level,jdbcType=CHAR},
      </if>
      <if test="projectstage != null">
        PROJECTSTAGE = #{projectstage,jdbcType=VARCHAR},
      </if>
      <if test="direntoryno != null">
        DIRENTORYNO = #{direntoryno,jdbcType=INTEGER},
      </if>
      <if test="isapp != null">
        ISAPP = #{isapp,jdbcType=INTEGER},
      </if>
      <if test="createuser != null">
        CREATEUSER = #{createuser,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.basedirectory.model.BaseDirectory">
    update basedirectory
    set SNAME = #{sname,jdbcType=VARCHAR},
      FULLNAME = #{fullname,jdbcType=VARCHAR},
      PARENTID = #{parentid,jdbcType=VARCHAR},
      PROJECTTYPE = #{projecttype,jdbcType=VARCHAR},
      LEVEL = #{level,jdbcType=CHAR},
      PROJECTSTAGE = #{projectstage,jdbcType=VARCHAR},
      DIRENTORYNO = #{direntoryno,jdbcType=INTEGER},
      ISAPP = #{isapp,jdbcType=INTEGER},
      CREATEUSER = #{createuser,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>

  <insert id="batchInsertSelective" parameterType="java.util.List">
    insert into basedirectory
    (ID, SNAME, FULLNAME,
    PARENTID, PROJECTTYPE, LEVEL,
    PROJECTSTAGE, DIRENTORYNO, ISAPP,
    CREATEUSER)
    values
    <foreach collection="list" item="item" index="index"
             separator=",">
      (
        #{item.id,jdbcType=VARCHAR}, #{item.sname,jdbcType=VARCHAR}, #{item.fullname,jdbcType=VARCHAR},
        #{item.parentid,jdbcType=VARCHAR}, #{item.projecttype,jdbcType=VARCHAR}, #{item.level,jdbcType=CHAR},
        #{item.projectstage,jdbcType=VARCHAR}, #{item.direntoryno,jdbcType=INTEGER}, #{item.isapp,jdbcType=INTEGER},
        #{item.createuser,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>
</mapper>