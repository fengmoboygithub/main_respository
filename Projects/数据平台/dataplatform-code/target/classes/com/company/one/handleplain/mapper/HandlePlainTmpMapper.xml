<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.company.one.handleplain.dao.HandlePlainTmpMapper">
  <resultMap id="BaseResultMap" type="com.company.one.handleplain.model.HandlePlainTmp">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="file_id" jdbcType="INTEGER" property="fileId" />
    <result column="submission_record_id" jdbcType="VARCHAR" property="submissionRecordId" />
    <result column="file_item_sort" jdbcType="INTEGER" property="fileItemSort" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.company.one.handleplain.model.HandlePlainTmp">
    <result column="file_item_content" jdbcType="LONGVARCHAR" property="fileItemContent" />
    <result column="data_json" jdbcType="LONGVARCHAR" property="dataJson" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, file_id, submission_record_id, file_item_sort, create_date, update_date
  </sql>
  <sql id="Blob_Column_List">
    file_item_content, data_json
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.company.one.handleplain.model.HandlePlainTmpExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from handle_plain_tmp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.company.one.handleplain.model.HandlePlainTmpExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from handle_plain_tmp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from handle_plain_tmp
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from handle_plain_tmp
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.company.one.handleplain.model.HandlePlainTmpExample">
    delete from handle_plain_tmp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.company.one.handleplain.model.HandlePlainTmp">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into handle_plain_tmp (file_id, submission_record_id, file_item_sort, 
      create_date, update_date, file_item_content, 
      data_json)
    values (#{fileId,jdbcType=INTEGER}, #{submissionRecordId,jdbcType=VARCHAR}, #{fileItemSort,jdbcType=INTEGER}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{fileItemContent,jdbcType=LONGVARCHAR}, 
      #{dataJson,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.company.one.handleplain.model.HandlePlainTmp">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into handle_plain_tmp
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        file_id,
      </if>
      <if test="submissionRecordId != null">
        submission_record_id,
      </if>
      <if test="fileItemSort != null">
        file_item_sort,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="fileItemContent != null">
        file_item_content,
      </if>
      <if test="dataJson != null">
        data_json,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fileId != null">
        #{fileId,jdbcType=INTEGER},
      </if>
      <if test="submissionRecordId != null">
        #{submissionRecordId,jdbcType=VARCHAR},
      </if>
      <if test="fileItemSort != null">
        #{fileItemSort,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileItemContent != null">
        #{fileItemContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="dataJson != null">
        #{dataJson,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.company.one.handleplain.model.HandlePlainTmpExample" resultType="java.lang.Long">
    select count(*) from handle_plain_tmp
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update handle_plain_tmp
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fileId != null">
        file_id = #{record.fileId,jdbcType=INTEGER},
      </if>
      <if test="record.submissionRecordId != null">
        submission_record_id = #{record.submissionRecordId,jdbcType=VARCHAR},
      </if>
      <if test="record.fileItemSort != null">
        file_item_sort = #{record.fileItemSort,jdbcType=INTEGER},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileItemContent != null">
        file_item_content = #{record.fileItemContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.dataJson != null">
        data_json = #{record.dataJson,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update handle_plain_tmp
    set id = #{record.id,jdbcType=INTEGER},
      file_id = #{record.fileId,jdbcType=INTEGER},
      submission_record_id = #{record.submissionRecordId,jdbcType=VARCHAR},
      file_item_sort = #{record.fileItemSort,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      file_item_content = #{record.fileItemContent,jdbcType=LONGVARCHAR},
      data_json = #{record.dataJson,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update handle_plain_tmp
    set id = #{record.id,jdbcType=INTEGER},
      file_id = #{record.fileId,jdbcType=INTEGER},
      submission_record_id = #{record.submissionRecordId,jdbcType=VARCHAR},
      file_item_sort = #{record.fileItemSort,jdbcType=INTEGER},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.company.one.handleplain.model.HandlePlainTmp">
    update handle_plain_tmp
    <set>
      <if test="fileId != null">
        file_id = #{fileId,jdbcType=INTEGER},
      </if>
      <if test="submissionRecordId != null">
        submission_record_id = #{submissionRecordId,jdbcType=VARCHAR},
      </if>
      <if test="fileItemSort != null">
        file_item_sort = #{fileItemSort,jdbcType=INTEGER},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="fileItemContent != null">
        file_item_content = #{fileItemContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="dataJson != null">
        data_json = #{dataJson,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.company.one.handleplain.model.HandlePlainTmp">
    update handle_plain_tmp
    set file_id = #{fileId,jdbcType=INTEGER},
      submission_record_id = #{submissionRecordId,jdbcType=VARCHAR},
      file_item_sort = #{fileItemSort,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      file_item_content = #{fileItemContent,jdbcType=LONGVARCHAR},
      data_json = #{dataJson,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.company.one.handleplain.model.HandlePlainTmp">
    update handle_plain_tmp
    set file_id = #{fileId,jdbcType=INTEGER},
      submission_record_id = #{submissionRecordId,jdbcType=VARCHAR},
      file_item_sort = #{fileItemSort,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>