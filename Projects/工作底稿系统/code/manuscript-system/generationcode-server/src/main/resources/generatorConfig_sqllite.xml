<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration> 
	<!-- 引入配置文件 -->
	<properties resource="init.properties"/>
	<!-- context元素用于指定生成一组对象的环境。targetRuntime:此属性用于指定生成的代码的运行时环境。MyBatis3:*这是默认值*--> 
    <context id="SqlliteContext" targetRuntime="com.company.generationcode.GeneratorConfiguration.InsoIntrospectedTable" defaultModelType="flat">
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>
		
		<!-- 生成limit分页属性	【扩展插件】-->
		<plugin type="com.company.generationcode.plugin.PaginationPlugin" />
		<!--生成的实体类实现序列化接口	【扩展插件】-->
		<plugin type="com.company.generationcode.plugin.SerializablePlugin" /> 
		<!--生成的实体类重写toString方法-->
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
		<!-- 生成的实体类重写hashCode和equals方法 -->
		<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>

        <commentGenerator type="com.company.generationcode.GeneratorConfiguration.MyCommentGenerator">
            <property name="suppressDate" value="false"/>
        </commentGenerator>
        <!--数据库连接的信息：驱动类、连接地址、用户名、密码 -->
        <jdbcConnection driverClass="${jdbcDriver}" 
        connectionURL="${jdbcUrl}" 
        userId="${jdbcUserId}" 
        password="${jdbcPassword}"></jdbcConnection>

		<!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 
			NUMERIC 类型解析为java.math.BigDecimal -->
		<javaTypeResolver>
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>

		<!-- targetProject:生成PO类的位置 -->
		<javaModelGenerator targetPackage="com.company.${packageName}.model"
			targetProject="${outPath}${projectPath}">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
			<!-- 从数据库返回的值被清理前后的空格 -->
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
        <!-- targetProject:mapper映射文件生成的位置 -->
		<sqlMapGenerator targetPackage="com.company.${packageName}.mapper" 
			targetProject="${outPath}${projectPath}">
			<!-- enableSubPackages:是否让schema作为包的后缀 -->
			<property name="enableSubPackages" value="false" />
		</sqlMapGenerator>
		<!-- targetPackage：mapper接口生成的位置 -->
<!-- 		<javaClientGenerator type="XMLMAPPER" -->
<!-- 			targetPackage="com.company.${packageName}.dao"  -->
<!-- 			targetProject="${outPath}${projectPath}"> -->
 			<!-- enableSubPackages:是否让schema作为包的后缀 -->
<!-- 			<property name="enableSubPackages" value="false" /> -->
<!-- 		</javaClientGenerator> -->
		<!-- 指定数据库表 -->
		<table tableName="${tableName}" domainObjectName="${domainObjectName}" enableCountByExample="true" enableUpdateByExample="true" enableDeleteByExample="true" enableSelectByExample="true" selectByExampleQueryId="true">
			<property name="rootClass" value="com.company.base.model.BaseModel"/>
		</table>
    </context>  
</generatorConfiguration>